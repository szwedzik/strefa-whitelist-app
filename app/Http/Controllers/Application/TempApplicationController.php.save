<?php


namespace App\Http\Controllers\Application;


use App\TempApplication;
use GuzzleHttp\Client;
use GuzzleHttp\Exception\ClientException;
use Illuminate\Support\Facades\Cookie;
use Illuminate\Support\Facades\Request;

class TempApplicationController
{
    public function displayApplicationCreation()
    {
        $client = new Client();
        $headers = [
            'headers' => [
                'Authorization' => 'Bearer ' . Cookie::get('token')
            ]
        ];

        try
        {
            $response = $client->get('https://discordapp.com/api/v6/users/@me', $headers);
        }
        catch (ClientException $exception)
        {
            return abort(403);
        }

        $responseBody = json_decode($response->getBody()->getContents());
        $profilePicture = 'https://cdn.discordapp.com/avatars/' . $responseBody->id . '/' . $responseBody->avatar . '.png';

        return view('pages.user.composeTemp')->with('profilePicture', $profilePicture);
    }

    public function handleApplicationCreation()
    {
        $client = new Client();
        $headers = [
            'headers' => [
                'Authorization' => 'Bearer ' . Cookie::get('token')
            ]
        ];

        try
        {
            $response = $client->get('https://discordapp.com/api/v6/users/@me', $headers);
        }
        catch (ClientException $exception)
        {
            return abort(403);
        }

        $responseBody = json_decode($response->getBody()->getContents());
        $id = $responseBody->id;

        $data = Request::all();
        unset($data['_token']);

        

        $tempApp = new TempApplication($data);
        $tempApp->discord_id = $id;
        $tempApp->state = 0;
        $tempApp->save();

        session()->flash('success', 'Podanie zostało wysłane!');

        return redirect('/');
    }
}
